using InsecureAppWebNet8.Models;

namespace InsecureAppWebNet8.ViewModels
{
    public class VulnerabilityViewModel<T>
    {
        public string Payload { get; init; } = string.Empty;
        public string AttackType { get; init; } = string.Empty;
        public string? ExecutedSql { get; init; }
        public List<T> Results { get; init; } = new List<T>();
        public string? ErrorMessage { get; init; }

        // Ces dictionnaires sont passés depuis le controller
        public Dictionary<string, string> AttackDescriptions { get; set; } = new();
        public Dictionary<string, string> PayloadExamples { get; set; } = new();

        public Dictionary<string, string> ErrorExplanations { get; set; } = new();

        public Dictionary<string, AttackInfo> AttackInfos { get; set; } = new();

        public static VulnerabilityViewModel<T> WithResults(string payload, string attackType, List<T> results, string? executedSql = null)
        {
            return new VulnerabilityViewModel<T>
            {
                Payload = payload,
                AttackType = attackType,
                Results = results,
                ExecutedSql = executedSql
            };
        }

        public static VulnerabilityViewModel<T> WithError(string payload, string attackType, string errorMessage)
        {
            return new VulnerabilityViewModel<T>
            {
                Payload = payload,
                AttackType = attackType,
                ErrorMessage = errorMessage
            };
        }
    }
}
